RobotProperties
{
      RobotName:TheDestroyer;
      RobotType:advancedRobot;
      BodyColor:yellow;
      GunColor:red;
      RadarColor:white;
}

number firepower = 100;
text nameOfRival = "SittingDuck";

bool turnLeftAndRotate(text currentRival)
{
   number degrees = 90;
   nameOfRival = currentRival;
   bool shotAtRival = false;
   bool a[5];
   a[3] = true;
   if (a[3])
   {
          fire(firepower);
          shotAtRival = true;
   }

   for(number b = 0 upto 2)
   {
       turnLeft(b);
   }
    return a[1];
}

void doSomething(){
    number x = 3.7;
    if(x == 3.6){
        x = 2;
    }
    else{
    x = x + 4.2;

    }
}

strategy Default(number et, number to)
{
    number firepowers[4];
    firepowers[1] = 3 ^ 5 ^ (1 + 1);
    firepowers[2] = 2;
    firepowers[3] = 3;
    number a = 3;
    number b = 45;
    a = a + b;

    routine()
    {
        turnRadarRight(360);
        for(number i = 0 upto 2)
        {
            ahead(20);
        }
    }

   when (ScannedRobotEvent e)
   {
       text currentRival = e.getName();
       turnLeftAndRotate(currentRival);
       Offensive();
   }
}

strategy Offensive()
{
    return 1;
    routine()
   {
       fire(1);
       return 1;
   }
   when(LowHealth e)
   {
       Default(100, 50 + 50);
   }
}

number Function()
{
    return 2;
    number x = 0;
}

event LowHealth()
{
   turnLeftAndRotate("30");

   return getEnergy() <= 50;
}
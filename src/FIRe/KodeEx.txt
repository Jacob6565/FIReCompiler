RobotProperties
{
      RobotName:TheDestroyer;
      RobotType:advancedRobot;
      BodyColor:yellow;
      GunColor:red;
      RadarColor:white;
}

number firepower = 1;
text nameOfRival = "SittingDuck";

bool turnLeftAndRotate(text currentRival)
{
   number degrees = 90;
   nameOfRival = currentRival;
   bool shotAtRival= false;

   if (nameOfRival == "WallRider")
   {
          fire(firepower);
          shotAtRival = true;
   }

   for(0 upto 2)
   {
       turnLeft(degrees);
   }

   return shotAtRival;
}

strategy Default()
{
   number[] firepowers;
   number[1] = 1 + 3 - 5;
   number[2] = 2;
   number[3] = 3;
   a = a + b;

   routine()
   {
         turnRadar(360);
       routine(2)
       {
          ahead(20);
       }
   }

   when (ScannedRobotEvent e)
   {
       text currentRival = e.getName();
       turnLeftAndRotate(currentRival);
       changeStrategy("Offensive");
   }
}

strategy Offensive()
{
   routine()
   {
       fire(1);
   }
   when(LowHealth a)
   {
       changeStrategy("Default");
   }
}

condition LowHealth()
{
   turnLeftAndRotate("SittingDuck");

   return getEnergy() <= 50;
}
